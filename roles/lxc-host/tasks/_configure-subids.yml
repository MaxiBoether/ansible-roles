- name: "get range of {{ item }}s to add"
  register: get_range_result
  shell: "grep '{{ lxc_user }}' '/etc/{{ item }}'
          | cut -d: -f 2-3"
  changed_when: false

- name: "sanity check detected range of {{ item }}s"
  assert:
    that:
      - "get_range_result.stdout_lines | length == 1"
      - "get_range_result.stdout_lines.0 | regex_search('[0-9]+:[0-9]+')
         ==
         get_range_result.stdout_lines.0"
    fail_msg: "could not detect {{ item }}s to add to {{ lxc_user }}
               (expected exactly one range,
                got '{{ get_range_result.stdout_lines }}')"

- name: "add {{ item }}s to common lxc configuration of user '{{ lxc_user }}'"
  blockinfile:
    dest: "{{ lxc_user_home }}/.config/lxc/common.conf"
    create: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK: {{ item }} configuration"
    block: >
      lxc.idmap = {{ item.3 }} 0 {{
        get_range_result.stdout_lines.0 | regex_replace(':', ' ')
      }}
  become: yes
  become_user: "{{ lxc_user }}"

########################################################################
# BEGIN How to do this elegantly?
#

- name: "get all intermediate directories to '{{ lxc_user_home }}'"
  set_fact:
    lxc_user_home_intermediate_dirs: "{{
      ['/'] if item == '' else
        lxc_user_home_intermediate_dirs
        + [lxc_user_home_intermediate_dirs[-1] + item + '/']
    }}"
  with_items: "{{ lxc_user_home.split('/') }}"

- name: "ensure access to lxc directories"
  include_tasks: _ensure-access.yml
  vars:
    dir: "{{ item }}"
    uid: "{{ get_range_result.stdout_lines.0.split(':').0 }}"
  with_items: "{{ lxc_user_home_intermediate_dirs }}"

#
# END How to do this elegantly?
########################################################################
