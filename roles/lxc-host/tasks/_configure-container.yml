- name: "{{ container_name }} : sanity check variables"
  assert:
    that:
      - "container_name | default('') | string != ''"
      - "container_conf.subnet | string | regex_search('[-:/0-9a-f]+')
         ==
         container_conf.subnet | string"

- name: "{{ container_name }} : add network bridge configuration file"
  blockinfile:
    dest: "/etc/network/interfaces.d/{{ container_bridge }}"
    create: yes
    block: |
      # file managed by Ansible
      # (role "lxc-host-unprivileged" of lpirl/ansible-roles)

      allow-hotplug {{ container_bridge }}
      auto {{ container_bridge }}
      iface {{ container_bridge }} inet6 static
        address {{ container_conf.subnet | ipaddr('1') }}
        bridge_fd 0
        bridge_stp off
        bridge_maxwait 0
        bridge_ports none
  notify: restart networking

- name: "{{ container_name }} : allow user '{{ lxc_user }}' to use bridge
         '{{ container_bridge }}'"
  lineinfile:
    path: /etc/lxc/lxc-usernet
    create: yes
    regexp: '^{{
        lxc_user | regex_escape()
      }}\s+.*\s+{{
        container_bridge | regex_escape()
      }}.*'
    line: "{{ lxc_user }} veth {{ container_bridge }} 1"

- name: get list of existing containers
  register: lxc_ls_result
  command: lxc-ls
  changed_when: false
  become: yes
  become_user: "{{ lxc_user }}"

- name: "{{ container_name }} : create container"
  command: >
    lxc-create
      --name '{{ container_name }}'
      {{ container_conf.create_args }}

  # last line in ``lxc_ls_result.stdout_lines`` has trailing white spaces
  when: container_name not in lxc_ls_result.stdout_lines | map('trim')
  become: yes
  become_user: "{{ lxc_user }}"

- name: "{{ container_name }} : set additional container configuration"
  blockinfile:
    dest: "{{ lxc_user_home }}/{{ container_name }}/config"
    marker: >
      # {mark} ANSIBLE MANAGED BLOCK: container-specific network
      configuration
    insertafter: EOF
    block: |
      lxc.net.0.link = {{ container_bridge }}
  become: yes
  become_user: "{{ lxc_user }}"
