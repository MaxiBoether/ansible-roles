- name: create cron scripts for disk space alert
  lineinfile:   dest=/etc/cron.hourly/90-disk_space_alert
                line='#!/bin/sh'
                insertbefore=BOF
                create=yes
                mode=700
  when: disk_space_alert_percentage >= 0

- name: delete cron scripts for disk space alert
  file: path=/etc/cron.hourly/90-disk_space_alert
        state=absent
  when: disk_space_alert_percentage < 0

- name: write command for disk space alert to cron script
  lineinfile: dest=/etc/cron.hourly/90-disk_space_alert
          line='/opt/admintools/scripts/disk-space-alert-all
                  {{ disk_space_alert_percentage }}'
          regexp=".*disk-space-alert-all.*"
          create=yes
  when: disk_space_alert_percentage >= 0



- name: install file system utilities (to get fstrim)
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - util-linux

- name: check for systemd fstrim units
  register: grep_fstrim_units_result
  shell: systemctl list-units --all | grep fstrim
  failed_when: grep_fstrim_units_result.rc not in [0, 1]
  changed_when: false

- name: enable (distro-provided units for) regular fstrim
  systemd:
    name: fstrim.timer
    enabled: yes
  when: grep_fstrim_units_result.rc == 0

- name: enable (our units for) regular fstrim
  include_tasks: ../../_include/systemd-unit.yml
  vars:
    name: "{{ item.key }}"
    start: "{{ item.value }}"
    content: "{{ lookup('file', item.key) }}"
    state: "{{ 'present' if grep_fstrim_units_result.rc == 1
              else 'absent' }}"
  with_dict: # unit: start
    fstrim.service: no
    fstrim.timer: yes
  when: grep_fstrim_units_result.rc == 1



- name: check for btrfs file systems
  register: grep_btrfs_from_mounts_results
  command: grep btrfs -c /proc/mounts
  failed_when: grep_btrfs_from_mounts_results.rc not in [0, 1]
  changed_when: false

- name: un/install btrfs file system utilities
  package:
    name: btrfs-progs
    state: "{{ 'present' if grep_btrfs_from_mounts_results.rc == 0
              else 'absent' }}"

- name: configure systemd units for btrfs maintenance
  include_tasks: ../../_include/systemd-unit.yml
  vars:
    name: "{{ item.key }}"
    start: "{{ item.value }}"
    content: "{{ lookup('file', item.key) }}"
    state: "{{ 'present' if grep_btrfs_from_mounts_results.rc == 0
              else 'absent' }}"
  with_dict: # unit: start
    btrfs-balance.service: no
    btrfs-balance.timer: yes
    btrfs-scrub.service: no
    btrfs-scrub.timer: yes
