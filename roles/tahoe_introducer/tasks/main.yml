- name: check if introducer exists
  register: check_introducer_dir
  stat: path={{ tahoe_basedir }}/introducer

- name: create new introducer
  command: "{{ tahoe_bin}} create-introducer -C {{ tahoe_basedir }}/introducer"
  when: check_introducer_dir.stat.exists == false
  notify: restart introducer

- name: set introducer port
  ini_file: dest="{{ tahoe_basedir }}/introducer/tahoe.cfg"
            section=node
            option=tub.port
            value="{{ introducer_port }}"
  notify: restart introducer

- name: set introducer location to AUTO
  ini_file: dest="{{ tahoe_basedir }}/introducer/tahoe.cfg"
            section=node
            option=tub.location
            value="AUTO"
  when: "node_external_host is not defined or not node_external_host"
  notify: restart introducer

- name: set external introducer location
  ini_file: dest="{{ tahoe_basedir }}/introducer/tahoe.cfg"
            section=node
            option=tub.location
            value="{{ node_external_host }}:{{ introducer_port }},AUTO"
  when: "node_external_host is defined and node_external_host"
  notify: restart introducer

- name: set introducer nickname
  ini_file: dest="{{ tahoe_basedir }}/introducer/tahoe.cfg"
            section=node
            option=nickname
            value="{{ ansible_hostname }} introducer"
  notify: restart introducer

- name: start introducer at boot
  cron: name="start tahoe introducer at boot"
        special_time=reboot
        job="{{ tahoe_bin }} start '{{ tahoe_basedir }}/introducer/'"

- name: running handlers to read out a possibly updated introducer furl
  meta: flush_handlers

- name: get the introducers' furl
  register: introducer_furl_cat
  action: command cat "{{ tahoe_basedir }}/introducer/private/introducer.furl"
  retries: 20
  delay: 1
  until: introducer_furl_cat|success
  changed_when: false

- name: print the introducers' furl
  debug: msg="Your introducer's furl is {{ introducer_furl_cat.stdout }}"
