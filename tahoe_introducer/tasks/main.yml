- name: check if introducer exists
  register: check_introducer_dir
  stat: path={{ tahoe_basedir }}/introducer

- name: create new introducer
  command: "tahoe create-introducer -C {{ tahoe_basedir }}/introducer"
  when: check_introducer_dir.stat.exists == false
  notify: restart introducer

- name: set introducer port
  ini_file: dest="{{ tahoe_basedir }}/introducer/tahoe.cfg"
            section=node
            option=tub.port
            value="{{ introducer_port }}"
  notify: restart introducer

- name: set introducer location
  ini_file: dest="{{ tahoe_basedir }}/introducer/tahoe.cfg"
            section=node
            option=tub.location
            value="{{ node_location }}:{{ introducer_port }}"
  notify: restart introducer

- name: set introducer nickname
  ini_file: dest="{{ tahoe_basedir }}/introducer/tahoe.cfg"
            section=node
            option=nickname
            value="{{ ansible_hostname }} introducer"
  notify: restart introducer

- name: check if introducer private dir exists
  register: check_introducer_private_dir
  stat: path={{ tahoe_basedir }}/introducer/private

- name: run the freshly created introducer the first time
  command: "tahoe start -C {{ tahoe_basedir }}/introducer"
  when: check_introducer_private_dir.stat.exists == false

- name: stop the freshly created introducer the first time
  command: "tahoe stop -C {{ tahoe_basedir }}/introducer"
  when: check_introducer_private_dir.stat.exists == false

- name: get the introducers' furl
  command: cat "{{ tahoe_basedir }}/introducer/private/introducer.furl"
  register: introducer_furl_cat

- name: print the introducers' furl
  debug: msg="Your introducer's furl is {{ introducer_furl_cat.stdout }}"

- name: start introducer at boot
  cron: name="start tahoe introducer at boot"
        special_time=reboot
        job="{{ tahoe_bin }} start '{{ tahoe_basedir }}/introducer/'"
