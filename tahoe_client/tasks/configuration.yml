- name: provide default configuration
  copy: src=tahoe-default.cfg
        dest="{{ tahoe_basedir }}/node/tahoe.cfg"
        force=no

- name: set node nickname
  ini_file: dest="{{ tahoe_basedir }}/node/tahoe.cfg"
            section=node
            option=nickname
            value='{{ ansible_nodename|default(ansible_fqdn) }}'

- name: set introducer furl
  ini_file: dest="{{ tahoe_basedir }}/node/tahoe.cfg"
            section=client
            option=introducer.furl
            value='{{ introducer_furl }}'

- name: set keepalive
  ini_file: dest="{{ tahoe_basedir }}/node/tahoe.cfg"
            section=node
            option=timeout.keepalive
            value=60

- name: set default mutable format
  ini_file: dest="{{ tahoe_basedir }}/node/tahoe.cfg"
            section=client
            option=mutable.format
            value=mdmf

############################ encoding ############################
# We need k out of N servers at min to recover.
# But normally, we want to download from k'=N servers.
# Servers can serve multiple shares, so k'>=N is okay too.
# To keep k' and N integers, the smallest possible multiplier is 2.

- name: calculate shares total
  register: shares_total
  shell: 'echo "$(({{storage_nodes_count}} * 2))"'
  changed_when: false
- name: set encoding parameter shares.total
  ini_file: dest="{{ tahoe_basedir }}/node/tahoe.cfg"
            section=client
            option=shares.total
            value="{{shares_total.stdout}}"

- name: calculate shares happy
  register: shares_happy
  shell: 'echo "$(({{storage_nodes_count}} - {{storage_nodes_small_count}}))"'
  changed_when: false
- name: set encoding parameter shares.happy
  ini_file: dest="{{ tahoe_basedir }}/node/tahoe.cfg"
            section=client
            option=shares.happy
            value="{{shares_happy.stdout}}"

# If we set N = 2*[number of servers] (see above), every server ends up
# with 2 of N shares in average. So we want to be able to tolerate the
# loss of N - 2 * [number of tolerable failed nodes] shares.
- name: calculate shares needed
  register: shares_needed
  shell: 'echo "$(({{shares_total.stdout}} - 2 * {{storage_nodes_tolerable_failures_count}}))"'
  changed_when: false
- name: set encoding parameter shares.needed
  ini_file: dest="{{ tahoe_basedir }}/node/tahoe.cfg"
            section=client
            option=shares.needed
            value="{{shares_needed.stdout}}"
